{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Pratica_06","provenance":[],"collapsed_sections":[],"authorship_tag":"ABX9TyMGBjykyFEFppuMGLYFZny1"},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"code","metadata":{"id":"5L4nFa3vCnyi","colab_type":"code","colab":{}},"source":["# Prática 06 - Gabriel Prado - 318124505"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"b9u4OL1VDQ9K","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":34},"executionInfo":{"status":"ok","timestamp":1600130211136,"user_tz":180,"elapsed":3321,"user":{"displayName":"Gabriel Henrique","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgHKMdvmXiNKIQBcm10K-YiFEkADmRQrR9hZyL-cKA=s64","userId":"03846985930599988145"}},"outputId":"8fd1d617-6e73-4124-bb11-282074872993"},"source":["!pip install mysql-connector-python-rf\n","\n","import mysql.connector\n","import pandas as pd"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Requirement already satisfied: mysql-connector-python-rf in /usr/local/lib/python3.6/dist-packages (2.2.2)\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"KH4EiACuDTsh","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":34},"executionInfo":{"status":"ok","timestamp":1600130785809,"user_tz":180,"elapsed":9104,"user":{"displayName":"Gabriel Henrique","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgHKMdvmXiNKIQBcm10K-YiFEkADmRQrR9hZyL-cKA=s64","userId":"03846985930599988145"}},"outputId":"bda7d2af-3e99-4fa2-e4d2-b3767f9910fb"},"source":["class ConexaoBD():\n","  def conectar (self):\n","    return mysql.connector.connect(host=\"gabrielhenriq.com.br\",user=\"gabrielh_aulas\",password=\"Nbd5%B,th[OJ\")\n","# Instanciar um objeto da classe\n","\n","class Categoria():\n","  def __init__ (self, conexao):\n","    self.conexao = conexao\n","  \n","  def inserir (self):\n","    sql = \"insert into gabrielh_aulas.categoria (nome, descricao) values('Telefonia', 'Aparelho telefônico'),('Informática', 'Computador portátil'),('Roupa', 'Vestuário'),('Calçado', 'Vestuário');\"  \n","    mycursor = self.conexao.cursor()\n","    mycursor.execute(sql)\n","    self.conexao.commit()\n","    print(mycursor.rowcount, \"Categorias Inseridas\")\n","\n","class Vendedor():\n","  def __init__ (self, conexao):\n","    self.conexao = conexao\n","  \n","  def inserir (self):\n","    sql = \"insert into gabrielh_aulas.vendedor (cpf, nome, email, telefone, endereco) values ('111.111.111-11', 'Ana', 'ana@ana.com.br', '(11) 1 1111-1111', 'Rua n.1, n. 1, Bairro 1, Cidade 1, MG'),('222.222.222-22', 'Bruno', 'bruno@bruno.com.br', '(22) 2 2222-2222', 'Rua n.2, n. 2, Bairro 2, Cidade 2, MG'),('333.333.333-33', 'Carla', 'carla@carla.com.br', '(33) 3 3333-3333', 'Rua n.3, n. 3, Bairro 3, Cidade 3, MG'),('444.444.444-44', 'Diego', 'diego@diego.com.br', '(44) 4 4444-4444', 'Rua n.4, n. 4, Bairro 4, Cidade 4, MG')\"\n","    mycursor = self.conexao.cursor()\n","    mycursor.execute(sql)\n","    self.conexao.commit()\n","    print(mycursor.rowcount, \"Vendedores Inseridos\")    \n","\n","class Produtos():\n","  def __init__ (self, conexao):\n","    self.conexao = conexao\n","  \n","  def inserir (self):\n","    sql = \"insert into Produto (nome, descricao, marca, id_categoria) values ('Celular', 'Celular 1', 'Apple', 1),('Celular', 'Celular 2', 'Samsung', 1)\"\n","    mycursor = self.conexao.cursor()\n","    mycursor.execute(sql)\n","    self.conexao.commit()\n","    print(mycursor.rowcount, \"Produtos Inseridos\")\n","\n","\n","class VendedorProdutos():\n","  def __init__ (self, conexao):\n","    self.conexao = conexao\n","  \n","  def inserir (self):\n","    sql = \"insert into VendedorProduto (cpf_vendedor, id_produto, quantidade, preco) values ('111.111.111-11', 1, 2, 4000), ('111.111.111-11', 2, 3, 3000);\"\n","    mycursor = self.conexao.cursor()\n","    mycursor.execute(sql)\n","    self.conexao.commit()\n","    print(mycursor.rowcount, \"Produtos Inseridos\")\n","\n","bd = ConexaoBD()\n","conexao = bd.conectar()\n","\n","# Inserir categorias\n","#categoria = Categoria(conexao)\n","#categoria.inserir()\n","\n","# Inserir Vendedores\n","vend = Vendedor(conexao)\n","vend.inserir()\n","\n","# Inserir Produtos\n","#prod = Produtos(conexao)\n","#prod.inserir()\n","\n","# Inserir Vendedores nos Produtos\n","#prodVend = VendedorProdutos(conexao)\n","#prodVend.inserir()\n","\n"],"execution_count":null,"outputs":[{"output_type":"stream","text":["4 Vendedores Inseridos\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"UCJz1QDYLa_B","colab_type":"code","colab":{}},"source":["# DATA FRAME - PANDA \n","\n","class getVendedor():\n","  def __init__ (self, conexao):\n","    self.conexao = conexao\n","  \n","  def gerarDataFrame (self):\n","    sql = \"SELECT cpf as 'CPF', nome as 'Vendedor', email as 'E-mail' FROM gabrielh_aulas.vendedor;\"\n","    mycursor = self.conexao.cursor()\n","    #mycursor.execute(sql)\n","    #myresult = mycursor.fetchall()\n","    data_frame = pd.read_sql_query(sql,self.conexao)\n","    print(data_frame)\n","\n","bd = ConexaoBD()\n","conexao = bd.conectar()\n","\n","getVendedores = getVendedor(conexao)\n","getVendedores.gerarDataFrame()\n"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"NHdtnvLPPlDm","colab_type":"code","colab":{}},"source":["# WHERE \n","\n","class Vendedor:\n","  def __init__ (self, conexao):\n","    self.conexao = conexão\n","    def pesquisarPandas (self):\n","      sql = \"SELECT vendedor.cpf as 'CPF' vendedor.nome as 'Vendedor', produtos.nome as 'Produto', produtos.marca as 'Marca' categorias.nome as 'Categoria', vendedor_produto.quantidade as 'Quantidade', vendedor_produto.preco as 'Preço' FROM vendedor WHERE vendedor.cpf =  vendedor_produto.cpf AND vendedor_produto.id = produto.id \"\n","      mycursor = self.conexao.cursor()\n","      data_frame = pd.read_sql_query(sql,self.conexao)\n","      print(data_frame)\n","\n","bd = ConexaoBD()\n","conexao = bd.conectar()\n","\n","getVendedores = getVendedor(conexao)\n","getVendedores.gerarDataFrame()      "],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"0pXS2BGpQzTm","colab_type":"code","colab":{}},"source":["# LIKE \n","\n","class Vendedor:\n","  def __init__ (self, conexao):\n","    self.conexao = conexão\n","    def buscar (self):\n","      sql = \"SELECT * FROM vendedor WHERE nome LIKE '%Gabriel%' \"\n","      mycursor = self.conexao.cursor()\n","      data_frame = pd.read_sql_query(sql,self.conexao)\n","      print(data_frame)\n","\n","bd = ConexaoBD()\n","conexao = bd.conectar()\n","\n","getVendedores = getVendedor(conexao)\n","getVendedores.buscar()    "],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"dHLNWfJVRmo9","colab_type":"code","colab":{}},"source":["# between\n","\n","class Vendedor:\n","  def __init__ (self, conexao):\n","    self.conexao = conexão\n","    def buscar (self):\n","      sql = \"SELECT vendedor.cpf as 'CPF' vendedor.nome as 'Vendedor', produtos.nome as 'Produto', produtos.marca as 'Marca' categorias.nome as 'Categoria', vendedor_produto.quantidade as 'Quantidade', vendedor_produto.preco as 'Preço' FROM vendedor WHERE vendedor.cpf =  vendedor_produto.cpf AND vendedor_produto.id = produto.id \" +\n","      \"AND preco between 80 and 200;\"\n","      mycursor = self.conexao.cursor()\n","      data_frame = pd.read_sql_query(sql,self.conexao)\n","      print(data_frame)\n","\n","bd = ConexaoBD()\n","conexao = bd.conectar()\n","\n","getVendedores = getVendedor(conexao)\n","getVendedores.buscar()    "],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"3almQEcV4cqq","colab_type":"code","colab":{}},"source":["# Distinct\n","\n","class Vendedor:\n","  def __init__ (self, conexao):\n","    self.conexao = conexão\n","    def buscar (self):\n","      sql = \"SELECT DISTINCT p.nome as Produto from Produto p\"\n","      mycursor = self.conexao.cursor()\n","      data_frame = pd.read_sql_query(sql,self.conexao)\n","      print(data_frame)\n","\n","bd = ConexaoBD()\n","conexao = bd.conectar()\n","\n","getVendedores = getVendedor(conexao)\n","getVendedores.buscar()    \n","\n"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"lYXSOz3Q4dR_","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":132},"executionInfo":{"status":"error","timestamp":1600209210548,"user_tz":180,"elapsed":698,"user":{"displayName":"Gabriel Henrique","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgHKMdvmXiNKIQBcm10K-YiFEkADmRQrR9hZyL-cKA=s64","userId":"03846985930599988145"}},"outputId":"914b2542-5507-4583-f032-5b6a04ec4af2"},"source":["# Subconsulta (IN)\n","\n","\n","class Vendedor:\n","  def __init__ (self, conexao):\n","    self.conexao = conexão\n","    def buscar (self):\n","      sql = \"SELECT v.cpf as CPF, v.nome as Vendedor from Vendedor v \" + \n","      \"WHERE v.cpf in (select vp.cpf_vendedor  from VendedorProduto vp)\"\n","      mycursor = self.conexao.cursor()\n","      data_frame = pd.read_sql_query(sql,self.conexao)\n","      print(data_frame)\n","\n","bd = ConexaoBD()\n","conexao = bd.conectar()\n","\n","getVendedores = getVendedor(conexao)\n","getVendedores.buscar()    \n","\n"],"execution_count":null,"outputs":[{"output_type":"error","ename":"IndentationError","evalue":"ignored","traceback":["\u001b[0;36m  File \u001b[0;32m\"<ipython-input-4-5e9bfc91336b>\"\u001b[0;36m, line \u001b[0;32m4\u001b[0m\n\u001b[0;31m    class Vendedor:\u001b[0m\n\u001b[0m    ^\u001b[0m\n\u001b[0;31mIndentationError\u001b[0m\u001b[0;31m:\u001b[0m unexpected indent\n"]}]},{"cell_type":"code","metadata":{"id":"jjGCtdin5SBZ","colab_type":"code","colab":{}},"source":["# Subconsulta (EXISTS)\n","\n","class Vendedor:\n","  def __init__ (self, conexao):\n","    self.conexao = conexão\n","    def buscar (self):\n","      sql = \"select v.cpf as CPF, v.nome as Vendedor  from Vendedor v \" +\n","      \" WHERE exists (select vp.cpf_vendedor  from VendedorProduto vp where v.cpf = vp.cpf_vendedor);\"\n","      mycursor = self.conexao.cursor()\n","      data_frame = pd.read_sql_query(sql,self.conexao)\n","      print(data_frame)\n","\n","bd = ConexaoBD()\n","conexao = bd.conectar()\n","\n","getVendedores = getVendedor(conexao)\n","getVendedores.buscar()    "],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"r5NXkKoP6ExK","colab_type":"code","colab":{}},"source":["# Subconsulta (NOT IN)\n","\n","class Vendedor:\n","  def __init__ (self, conexao):\n","    self.conexao = conexão\n","    def buscar (self):\n","      sql = \"select v.cpf as CPF, v.nome as Vendedor  from Vendedor v  \" + \n","        \"where v.cpf not in (select vp.cpf_vendedor  from VendedorProduto vp);\" \n","      mycursor = self.conexao.cursor()\n","      data_frame = pd.read_sql_query(sql,self.conexao)\n","      print(data_frame)\n","\n","bd = ConexaoBD()\n","conexao = bd.conectar()\n","\n","getVendedores = getVendedor(conexao)\n","getVendedores.buscar()    "],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"xwaHUOvk6Sem","colab_type":"code","colab":{}},"source":["# Subconsulta (NOT EXISTS)\n","\n","class Vendedor:\n","  def __init__ (self, conexao):\n","    self.conexao = conexão\n","    def buscar (self):\n","      sql = \"select v.cpf as CPF, v.nome as Vendedor  from Vendedor v  \" + \n","      \"where not exists (select vp.cpf_vendedor from VendedorProduto vp where v.cpf = vp.cpf_vendedor);\"  \n","      mycursor = self.conexao.cursor()\n","      data_frame = pd.read_sql_query(sql,self.conexao)\n","      print(data_frame)\n","\n","bd = ConexaoBD()\n","conexao = bd.conectar()\n","\n","getVendedores = getVendedor(conexao)\n","getVendedores.buscar()    "],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"4F6UThS96fGQ","colab_type":"code","colab":{}},"source":["# Função AGREGADA MAX\n","\n","class Vendedor:\n","  def __init__ (self, conexao):\n","    self.conexao = conexão\n","    def buscar (self):\n","      sql = \"select max (preco) as 'Preço Máximo' from VendedorProduto\"  \n","      mycursor = self.conexao.cursor()\n","      data_frame = pd.read_sql_query(sql,self.conexao)\n","      print(data_frame)\n","\n","bd = ConexaoBD()\n","conexao = bd.conectar()\n","\n","getVendedores = getVendedor(conexao)\n","getVendedores.buscar()    "],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"Tm6UskXj6n_N","colab_type":"code","colab":{}},"source":["# Função AGREGADA MIN\n","\n","class Vendedor:\n","  def __init__ (self, conexao):\n","    self.conexao = conexão\n","    def buscar (self):\n","      sql = \"SELECT min (preco) as 'Preço Máximo' from vendedor_produtos \"  \n","      mycursor = self.conexao.cursor()\n","      data_frame = pd.read_sql_query(sql,self.conexao)\n","      print(data_frame)\n","\n","bd = ConexaoBD()\n","conexao = bd.conectar()\n","\n","getVendedores = getVendedor(conexao)\n","getVendedores.buscar()    "],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"QGDArSpH60Za","colab_type":"code","colab":{}},"source":["# Função AGREGADA AVG\n","\n","class Vendedor:\n","  def __init__ (self, conexao):\n","    self.conexao = conexão\n","    def buscar (self):\n","      sql = \"SELECT avg (preco) AS 'Preço Máximo' FROM vendedor_produtos\"  \n","      mycursor = self.conexao.cursor()\n","      data_frame = pd.read_sql_query(sql,self.conexao)\n","      print(data_frame)\n","\n","bd = ConexaoBD()\n","conexao = bd.conectar()\n","\n","getVendedores = getVendedor(conexao)\n","getVendedores.buscar()    "],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"s48saxAy7EGk","colab_type":"code","colab":{}},"source":["# Função AGREGADA SUM\n","\n","class Vendedor:\n","  def __init__ (self, conexao):\n","    self.conexao = conexão\n","    def buscar (self):\n","      sql = \"SELECT sum (preco) as 'Preço Máximo' FROM VendedorProduto\"  \n","      mycursor = self.conexao.cursor()\n","      data_frame = pd.read_sql_query(sql,self.conexao)\n","      print(data_frame)\n","\n","bd = ConexaoBD()\n","conexao = bd.conectar()\n","\n","getVendedores = getVendedor(conexao)\n","getVendedores.buscar()    "],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"exMat6mR7O51","colab_type":"code","colab":{}},"source":["# Função AGREGADA COUNT\n","\n","class Vendedor:\n","  def __init__ (self, conexao):\n","    self.conexao = conexão\n","    def buscar (self):\n","      sql = \"SELECT count (id) as 'Contagem' FROM VendedorProduto\"  \n","      mycursor = self.conexao.cursor()\n","      data_frame = pd.read_sql_query(sql,self.conexao)\n","      print(data_frame)\n","\n","bd = ConexaoBD()\n","conexao = bd.conectar()\n","\n","getVendedores = getVendedor(conexao)\n","getVendedores.buscar()    "],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"-G8SF6Xa7VaV","colab_type":"code","colab":{}},"source":["# GROUP BY\n","\n","class Vendedor:\n","  def __init__ (self, conexao):\n","    self.conexao = conexão\n","    def buscar (self):\n","      sql = \"select p.nome as Produto, c.nome as Categoria, vp.quantidade as Qtde, vp.preco as Preço \" +\n","          \" FROM Produto p, Categoria c, VendedorProduto vp where vp.id_produto = p.id and p.id_categoria = c.id \" +\n","          \" group by p.nome, c.nome, vp.quantidade, vp.preco\"\n","      mycursor = self.conexao.cursor()\n","      data_frame = pd.read_sql_query(sql,self.conexao)\n","      print(data_frame)\n","\n","bd = ConexaoBD()\n","conexao = bd.conectar()\n","\n","getVendedores = getVendedor(conexao)\n","getVendedores.buscar()    "],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"lG7fWWO973gV","colab_type":"code","colab":{}},"source":["# HAVING\n","\n","class Vendedor:\n","  def __init__ (self, conexao):\n","    self.conexao = conexão\n","    def buscar (self):\n","      sql = \"select p.nome as Produto, c.nome as Categoria, vp.quantidade as Qtde, vp.preco AS Preço from Produto p, Categoria c, VendedorProduto vp \" +\n","            \" WHERE vp.id_produto = p.id AND p.id_categoria = c.id group by p.nome, c.nome, vp.quantidade, vp.preco HAVING vp.preco > 500\"\n","      mycursor = self.conexao.cursor()\n","      data_frame = pd.read_sql_query(sql,self.conexao)\n","      print(data_frame)\n","\n","bd = ConexaoBD()\n","conexao = bd.conectar()\n","\n","getVendedores = getVendedor(conexao)\n","getVendedores.buscar()    "],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"ReVH03jN8I_a","colab_type":"code","colab":{}},"source":["# ORDER BY \n","\n","class Vendedor:\n","  def __init__ (self, conexao):\n","    self.conexao = conexão\n","    def buscar (self):\n","      sql = \"select p.nome as Produto, c.nome as Categoria, vp.quantidade as Qtde, vp.preco AS Preço FROM Produto p, Categoria c, VendedorProduto vp \" +\n","            \" WHERE vp.id_produto = p.id and p.id_categoria = c.id group by p.nome, c.nome, vp.quantidade, vp.preco having vp.preco > 500 order by c.nome asc, vp.preco desc\"\n","      mycursor = self.conexao.cursor()\n","      data_frame = pd.read_sql_query(sql,self.conexao)\n","      print(data_frame)\n","\n","bd = ConexaoBD()\n","conexao = bd.conectar()\n","\n","getVendedores = getVendedor(conexao)\n","getVendedores.buscar()    "],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"K5kM4X928pEV","colab_type":"code","colab":{}},"source":["# INNER JOIN\n","\n","class Vendedor:\n","  def __init__ (self, conexao):\n","    self.conexao = conexão\n","    def buscar (self):\n","      sql = \"select v.cpf as CPF, v.nome as Vendedor, vp.quantidade as Qtde, vp.preco as Preço , p.nome as Produto, c.nome as Categoria from Vendedor v inner join VendedorProduto vp on v.cpf = vp.cpf_vendedor inner join Produto p on vp.id_produto = p.id  inner join Categoria c on p.id_categoria = c.id order by v.cpf;\"\n","      mycursor = self.conexao.cursor()\n","      data_frame = pd.read_sql_query(sql,self.conexao)\n","      print(data_frame)\n","\n","bd = ConexaoBD()\n","conexao = bd.conectar()\n","\n","getVendedores = getVendedor(conexao)\n","getVendedores.buscar()    "],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"-5cFCkaRa869","colab_type":"code","colab":{}},"source":["# RIGHT JOIN\n","\n","class Vendedor:\n","  def __init__ (self, conexao):\n","    self.conexao = conexão\n","    def buscar (self):\n","      sql = \"select v.cpf as CPF, v.nome as Vendedor, vp.quantidade as Qtde, vp.preco as Preço +\n","            \" , p.nome as Produto, c.nome as Categoria \"+\n","            \" from Vendedor v  right join VendedorProduto vp on v.cpf = vp.cpf_vendedor \" + \n","            \" right join Produto p on vp.id_produto = p.id right join Categoria c on p.id_categoria = c.id\" +\n","            \" order by v.cpf;\"\n","      mycursor = self.conexao.cursor()\n","      data_frame = pd.read_sql_query(sql,self.conexao)\n","      print(data_frame)\n","\n","bd = ConexaoBD()\n","conexao = bd.conectar()\n","\n","getVendedores = getVendedor(conexao)\n","getVendedores.buscar()    "],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"GTT9G2t8bd70","colab_type":"code","colab":{}},"source":["# FULL JOIN\n","\n","class Vendedor:\n","  def __init__ (self, conexao):\n","    self.conexao = conexão\n","    def buscar (self):\n","      sql = \"SELCT * FROM vendedor v\"\n","            \" full join vendedor_Produto vp on v.cpf = vp.cpf_vendedor \" + \n","            \" full join produto p on vp.id_produto = p.id\" +\n","            \" full join categorias c on p.id_categoria = c.id\"+\n","            \" ORDER BY cpf\"\n","      mycursor = self.conexao.cursor()\n","      data_frame = pd.read_sql_query(sql,self.conexao)\n","      print(data_frame)\n","\n","bd = ConexaoBD()\n","conexao = bd.conectar()\n","\n","getVendedores = getVendedor(conexao)\n","getVendedores.buscar()    "],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"WhdPIH8nb77z","colab_type":"code","colab":{}},"source":["# CROSS JOIN\n","\n","class Vendedor:\n","  def __init__ (self, conexao):\n","    self.conexao = conexão\n","    def buscar (self):\n","      sql = \"SELCT * FROM produtos, c.nome as 'Categoria'\"+\n","      \"FROM produto p CROSS JOIN categoria c ORDER BY p.nome, c.nome\"\n","      mycursor = self.conexao.cursor()\n","      data_frame = pd.read_sql_query(sql,self.conexao)\n","      print(data_frame)\n","\n","bd = ConexaoBD()\n","conexao = bd.conectar()\n","\n","getVendedores = getVendedor(conexao)\n","getVendedores.buscar()    "],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"2frt2iA7cQa2","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":132},"executionInfo":{"status":"error","timestamp":1600386382377,"user_tz":180,"elapsed":595,"user":{"displayName":"Gabriel Henrique","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgHKMdvmXiNKIQBcm10K-YiFEkADmRQrR9hZyL-cKA=s64","userId":"03846985930599988145"}},"outputId":"7e4c3ebd-5181-475a-d4a0-82ff1629775f"},"source":["# Exercicio\n","\n","# CROSS JOIN\n","\n","class getData:\n","  def __init__ (self, conexao, sql):\n","    self.conexao = conexão\n","    self.sql = sql\n","    def run (self):\n","      mycursor = self.conexao.cursor()\n","      data_frame = pd.read_sql_query(sql,self.conexao)\n","      print(data_frame)\n","\n","#1- \n","sql = \"SELECT * FROM gabrielh_aulas.vendedores WHERE vendedores.nome LIKE '%s'\"\n","#2- \n","sql = \" SELECT * FROM gabrielh_aulas.vendedores \" + \n","      \" JOIN vendedores_produtos on id_vendedor = fk_id_vendedor_vendedores \" + \n","      \" JOIN produtos on id_prod = vendedores_produtos.fk_id_prod_produtos \" + \n","      \" WHERE produtos.valor IN (10,50) AND produtos.valor IN(100,500)\"\n","#3- \n","sql = \" SELECT *, SUM(produtos.valor) FROM gabrielh_aulas.vendedores \" + \n","      \" JOIN vendedores_produtos on id_vendedor = fk_id_vendedor_vendedores \" + \n","      \" JOIN produtos on id_prod = vendedores_produtos.fk_id_prod_produtos \" +\n","      \" WHERE vendedores.nome = 'Ana'\"\n","#4- \n","sql = \" SELECT *, SUM(produtos.valor) FROM gabrielh_aulas.vendedores \" + \n","      \" JOIN vendedores_produtos on id_vendedor = fk_id_vendedor_vendedores \" + \n","      \" JOIN produtos on id_prod = vendedores_produtos.fk_id_prod_produtos \"\n","#5- \n","sql = \" SELECT *, SUM(produtos.valor) FROM gabrielh_aulas.vendedores \" + \n","      \" JOIN vendedores_produtos on id_vendedor = fk_id_vendedor_vendedores \" + \n","      \" JOIN produtos on id_prod = vendedores_produtos.fk_id_prod_produtos \"\n","#6- \n","sql = \" SELECT *, SUM(produtos.valor) FROM gabrielh_aulas.vendedores \" + \n","      \" JOIN vendedores_produtos on id_vendedor = fk_id_vendedor_vendedores \" + \n","      \" JOIN produtos on id_prod = vendedores_produtos.fk_id_prod_produtos \"\n","#7 -      \n","sql = \" SELECT *, SUM(produtos.valor) FROM gabrielh_aulas.vendedores \" + \n","      \" JOIN vendedores_produtos on id_vendedor = fk_id_vendedor_vendedores \" + \n","      \" JOIN produtos on id_prod = vendedores_produtos.fk_id_prod_produtos \"\n","\n","bd = ConexaoBD()\n","conexao = bd.conectar()\n","\n","result = getData(conexao,sql)\n","result.run()    "],"execution_count":2,"outputs":[{"output_type":"error","ename":"SyntaxError","evalue":"ignored","traceback":["\u001b[0;36m  File \u001b[0;32m\"<ipython-input-2-bbd2c813ed63>\"\u001b[0;36m, line \u001b[0;32m16\u001b[0m\n\u001b[0;31m    sql = \" SELECT * FROM gabrielh_aulas.vendedores \" +\u001b[0m\n\u001b[0m                                                        ^\u001b[0m\n\u001b[0;31mSyntaxError\u001b[0m\u001b[0;31m:\u001b[0m invalid syntax\n"]}]},{"cell_type":"code","metadata":{"id":"mZcVC5H4cuQx","colab_type":"code","colab":{}},"source":["#1- "],"execution_count":null,"outputs":[]}]}